{"ast":null,"code":"import React, { useState } from \"react\";\nconst baseURL = `http://lookup-service-prod.mlb.com/json/named.search_player_all.bam?sport_code='mlb'&active_sw='Y'`;\n\n// /json/named.player_info.bam?sport_code='mlb'&player_id={player_id}\n\n// &name_part='${encoded}%25'\n\nexport const playerNameSearchAutoComplete = async value => {\n  try {\n    // encode URI removes spaces and the like from our search bar\n    const encoded = encodeURIComponent(value);\n    const fetching = await fetch(`${baseURL}&name_part='${encoded}%25'`);\n    const playerSearch = await fetching.json();\n    // console.log('calling up... ', playerSearch)\n    const newPlayerName = playerSearch.search_player_all.queryResults.row;\n    console.log('calling up... ', newPlayerName);\n    return newPlayerName;\n  } catch (error) {\n    console.error('there was an error searching: ', error);\n  }\n};\nexport const getIndividualPlayer = async playerId => {\n  const response = await fetch(`http://lookup-service-prod.mlb.com/json/named.player_info.bam?sport_code='mlb'&player_id=${playerId}`).then(result => result.json());\n  console.log(response);\n};","map":{"version":3,"names":["React","useState","baseURL","playerNameSearchAutoComplete","value","encoded","encodeURIComponent","fetching","fetch","playerSearch","json","newPlayerName","search_player_all","queryResults","row","console","log","error","getIndividualPlayer","playerId","response","then","result"],"sources":["/Users/marcus/Documents/fullstack/baseball-React/src/api.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst baseURL = `http://lookup-service-prod.mlb.com/json/named.search_player_all.bam?sport_code='mlb'&active_sw='Y'`\n\n// /json/named.player_info.bam?sport_code='mlb'&player_id={player_id}\n\n\n\n// &name_part='${encoded}%25'\n\nexport const playerNameSearchAutoComplete = async (value) => {\n\n    try{\n        // encode URI removes spaces and the like from our search bar\n        const encoded = encodeURIComponent(value)\n\n        const fetching = await fetch(`${baseURL}&name_part='${encoded}%25'`)\n        const playerSearch = await fetching.json();\n        // console.log('calling up... ', playerSearch)\n        const newPlayerName = playerSearch.search_player_all.queryResults.row\n        console.log('calling up... ', newPlayerName)\n        return newPlayerName\n    } catch (error) {\n        console.error('there was an error searching: ', error)\n    }\n}\n\nexport const getIndividualPlayer = async (playerId) => {\n    const response = await fetch(`http://lookup-service-prod.mlb.com/json/named.player_info.bam?sport_code='mlb'&player_id=${playerId}`).then(result => result.json())\n    console.log(response)\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,OAAO,GAAI,oGAAmG;;AAEpH;;AAIA;;AAEA,OAAO,MAAMC,4BAA4B,GAAG,MAAOC,KAAK,IAAK;EAEzD,IAAG;IACC;IACA,MAAMC,OAAO,GAAGC,kBAAkB,CAACF,KAAK,CAAC;IAEzC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,OAAQ,eAAcG,OAAQ,MAAK,CAAC;IACpE,MAAMI,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAC1C;IACA,MAAMC,aAAa,GAAGF,YAAY,CAACG,iBAAiB,CAACC,YAAY,CAACC,GAAG;IACrEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,aAAa,CAAC;IAC5C,OAAOA,aAAa;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;EAC1D;AACJ,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,QAAQ,IAAK;EACnD,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAE,4FAA2FW,QAAS,EAAC,CAAC,CAACE,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACZ,IAAI,EAAE,CAAC;EAClKK,OAAO,CAACC,GAAG,CAACI,QAAQ,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}